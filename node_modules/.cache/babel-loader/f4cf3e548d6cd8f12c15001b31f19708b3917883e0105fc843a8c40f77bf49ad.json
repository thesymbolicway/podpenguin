{"ast":null,"code":"var _jsxFileName = \"/Users/dannyarisa/podpenguin/podpenguin/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport sha1 from 'sha1';\nimport PodcastContainer from './components/PodcastContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [podcasts, setPodcasts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('The Tim Dillon');\n  useEffect(() => {\n    const apiKey = 'G7W9KCRKZ83SCS4YGWLE';\n    const apiSecret = 'Ljr7EMHDpq7p37DnpfQCcTNHHNVwWKL7KqYKgL3B';\n    const apiHeaderTime = Date.now() / 1000;\n    const hash = sha1(apiKey + apiSecret + apiHeaderTime);\n    const headers = {\n      'User-Agent': 'SuperPodcastPlayer/1.3',\n      'X-Auth-Key': apiKey,\n      'X-Auth-Date': apiHeaderTime,\n      Authorization: hash\n    };\n    fetch(`https://api.podcastindex.org/api/1.0/search/byterm?q=${searchQuery}`, {\n      headers\n    }).then(response => response.json()).then(data => {\n      // Set the podcasts state to the array of feeds from the API response\n      setPodcasts(data.feeds);\n    }).catch(err => console.error(err));\n  }, [searchQuery]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      onChange: event => setSearchQuery(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), podcasts ? podcasts.map(podcast => /*#__PURE__*/_jsxDEV(PodcastContainer, {\n      podcast: podcast\n    }, podcast.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading podcasts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"B59XxVzma/YjM+So6mHcIXPlasI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","motion","sha1","PodcastContainer","App","podcasts","setPodcasts","searchQuery","setSearchQuery","apiKey","apiSecret","apiHeaderTime","Date","now","hash","headers","Authorization","fetch","then","response","json","data","feeds","catch","err","console","error","event","target","value","map","podcast","id"],"sources":["/Users/dannyarisa/podpenguin/podpenguin/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport sha1 from 'sha1';\nimport PodcastContainer from './components/PodcastContainer';\n\nconst App = () => {\n  const [podcasts, setPodcasts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('The Tim Dillon');\n\n  useEffect(() => {\n    const apiKey = 'G7W9KCRKZ83SCS4YGWLE';\n    const apiSecret = 'Ljr7EMHDpq7p37DnpfQCcTNHHNVwWKL7KqYKgL3B';\n    const apiHeaderTime = Date.now() / 1000;\n    const hash = sha1(apiKey + apiSecret + apiHeaderTime);\n  \n    const headers = {\n      'User-Agent': 'SuperPodcastPlayer/1.3',\n      'X-Auth-Key': apiKey,\n      'X-Auth-Date': apiHeaderTime,\n      Authorization: hash,\n    };\n  \n    fetch(`https://api.podcastindex.org/api/1.0/search/byterm?q=${searchQuery}`, { headers })\n      .then(response => response.json())\n      .then(data => {\n        // Set the podcasts state to the array of feeds from the API response\n        setPodcasts(data.feeds);\n      })\n      .catch(err => console.error(err));\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={searchQuery}\n        onChange={event => setSearchQuery(event.target.value)}\n      />\n      {podcasts ? (\n        podcasts.map(podcast => (\n          <PodcastContainer key={podcast.id} podcast={podcast} />\n        ))\n      ) : (\n        <p>Loading podcasts...</p>\n      )}\n    </div>\n  );\n};\n\n\n\nexport default App\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,gBAAgB,MAAM,+BAA+B;AAAC;AAE7D,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,gBAAgB,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACd,MAAMS,MAAM,GAAG,sBAAsB;IACrC,MAAMC,SAAS,GAAG,0CAA0C;IAC5D,MAAMC,aAAa,GAAGC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI;IACvC,MAAMC,IAAI,GAAGZ,IAAI,CAACO,MAAM,GAAGC,SAAS,GAAGC,aAAa,CAAC;IAErD,MAAMI,OAAO,GAAG;MACd,YAAY,EAAE,wBAAwB;MACtC,YAAY,EAAEN,MAAM;MACpB,aAAa,EAAEE,aAAa;MAC5BK,aAAa,EAAEF;IACjB,CAAC;IAEDG,KAAK,CAAE,wDAAuDV,WAAY,EAAC,EAAE;MAAEQ;IAAQ,CAAC,CAAC,CACtFG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACAf,WAAW,CAACe,IAAI,CAACC,KAAK,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC,EAAE,CAACjB,WAAW,CAAC,CAAC;EAEjB,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MAAM;MACX,KAAK,EAAEA,WAAY;MACnB,QAAQ,EAAEoB,KAAK,IAAInB,cAAc,CAACmB,KAAK,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACtD,EACDxB,QAAQ,GACPA,QAAQ,CAACyB,GAAG,CAACC,OAAO,iBAClB,QAAC,gBAAgB;MAAkB,OAAO,EAAEA;IAAQ,GAA7BA,OAAO,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAClC,CAAC,gBAEF;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GA1CI5B,GAAG;AAAA,KAAHA,GAAG;AA8CT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/dannyarisa/podpenguin/podpenguin/client/src/components/PodcastContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport xml2js from 'xml2js';\nimport AudioPlayer from './AudioPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PodcastContainer = _ref => {\n  _s();\n  let {\n    podcast\n  } = _ref;\n  const {\n    image,\n    title,\n    author,\n    link,\n    audioUrl,\n    description,\n    originalUrl\n  } = podcast;\n  const [episodes, setEpisodes] = useState([]);\n  useEffect(() => {\n    // Make an HTTP GET request to the originalUrl\n    axios.get(originalUrl).then(response => {\n      // Parse the XML data\n      xml2js.parseString(response.data, (err, result) => {\n        if (err) {\n          console.error(err);\n        } else {\n          // Update state with the parsed podcast data\n          setEpisodes(result.rss.channel[0].item);\n        }\n      });\n    });\n  }, [originalUrl]);\n\n  // Use the map() method to iterate over the episodes\n  // and display the information for each episode\n  const episodeList = episodes.map(episode => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: episode.title[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: episode.description[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: episode.pubDate[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, episode.guid[0]._, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this));\n  console.log(episodeList);\n  console.log(originalUrl);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"podcast-container\",\n    children: [image ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: title,\n      onClick: () => window.open(link, '_blank')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://www.rbr.com/wp-content/uploads/unnamed-1-45.jpg\",\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(PodcastContainer, \"opzXqvj4mKBdgoksoyOT02oNzRo=\");\n_c = PodcastContainer;\nexport default PodcastContainer;\nvar _c;\n$RefreshReg$(_c, \"PodcastContainer\");","map":{"version":3,"names":["React","useState","useEffect","axios","xml2js","AudioPlayer","PodcastContainer","podcast","image","title","author","link","audioUrl","description","originalUrl","episodes","setEpisodes","get","then","response","parseString","data","err","result","console","error","rss","channel","item","episodeList","map","episode","pubDate","guid","_","log","window","open"],"sources":["/Users/dannyarisa/podpenguin/podpenguin/client/src/components/PodcastContainer.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport xml2js from 'xml2js';\nimport AudioPlayer from './AudioPlayer'\n\nconst PodcastContainer = ({ podcast }) => {\n  const { image, title, author, link, audioUrl, description, originalUrl  } = podcast;\n  const [episodes, setEpisodes] = useState([]);\n\n  useEffect(() => {\n    // Make an HTTP GET request to the originalUrl\n    axios.get(originalUrl).then((response) => {\n      // Parse the XML data\n      xml2js.parseString(response.data, (err, result) => {\n        if (err) {\n          console.error(err);\n        } else {\n          // Update state with the parsed podcast data\n          setEpisodes(result.rss.channel[0].item);\n        }\n      });\n    });\n  }, [originalUrl]);\n\n  // Use the map() method to iterate over the episodes\n  // and display the information for each episode\n  const episodeList = episodes.map(episode => (\n    <li key={episode.guid[0]._}>\n      <h3>{episode.title[0]}</h3>\n      <p>{episode.description[0]}</p>\n      <p>{episode.pubDate[0]}</p>\n    </li>\n  ));\n     console.log(episodeList)\n    \n  \nconsole.log(originalUrl);\n\n\n  return (\n    <div className=\"podcast-container\">\n      {image ? (\n        <img\n          src={image}\n          alt={title}\n          onClick={() => window.open(link, '_blank')}\n        />\n      ) : (\n        <img src=\"https://www.rbr.com/wp-content/uploads/unnamed-1-45.jpg\" alt={title} />\n      )}\n      <h2>{title}</h2>\n      <h3>{author}</h3>\n      {/* <AudioPlayer audioUrl={audioUrl} /> */}\n      <p>{description}</p>\n    </div>\n  );\n};\n\nexport default PodcastContainer;\n\n\n\n\n\n\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,WAAW,MAAM,eAAe;AAAA;AAEvC,MAAMC,gBAAgB,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EACnC,MAAM;IAAEC,KAAK;IAAEC,KAAK;IAAEC,MAAM;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,WAAW;IAAEC;EAAa,CAAC,GAAGP,OAAO;EACnF,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACc,GAAG,CAACH,WAAW,CAAC,CAACI,IAAI,CAAEC,QAAQ,IAAK;MACxC;MACAf,MAAM,CAACgB,WAAW,CAACD,QAAQ,CAACE,IAAI,EAAE,CAACC,GAAG,EAAEC,MAAM,KAAK;QACjD,IAAID,GAAG,EAAE;UACPE,OAAO,CAACC,KAAK,CAACH,GAAG,CAAC;QACpB,CAAC,MAAM;UACL;UACAN,WAAW,CAACO,MAAM,CAACG,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;QACzC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,CAACd,WAAW,CAAC,CAAC;;EAEjB;EACA;EACA,MAAMe,WAAW,GAAGd,QAAQ,CAACe,GAAG,CAACC,OAAO,iBACtC;IAAA,wBACE;MAAA,UAAKA,OAAO,CAACtB,KAAK,CAAC,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAM,eAC3B;MAAA,UAAIsB,OAAO,CAAClB,WAAW,CAAC,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAK,eAC/B;MAAA,UAAIkB,OAAO,CAACC,OAAO,CAAC,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA,GAHpBD,OAAO,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,CAAC;IAAA;IAAA;IAAA;EAAA,QAK3B,CAAC;EACCV,OAAO,CAACW,GAAG,CAACN,WAAW,CAAC;EAG7BL,OAAO,CAACW,GAAG,CAACrB,WAAW,CAAC;EAGtB,oBACE;IAAK,SAAS,EAAC,mBAAmB;IAAA,WAC/BN,KAAK,gBACJ;MACE,GAAG,EAAEA,KAAM;MACX,GAAG,EAAEC,KAAM;MACX,OAAO,EAAE,MAAM2B,MAAM,CAACC,IAAI,CAAC1B,IAAI,EAAE,QAAQ;IAAE;MAAA;MAAA;MAAA;IAAA,QAC3C,gBAEF;MAAK,GAAG,EAAC,yDAAyD;MAAC,GAAG,EAAEF;IAAM;MAAA;MAAA;MAAA;IAAA,QAC/E,eACD;MAAA,UAAKA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAChB;MAAA,UAAKC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM,eAEjB;MAAA,UAAIG;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAChB;AAEV,CAAC;AAAC,GAnDIP,gBAAgB;AAAA,KAAhBA,gBAAgB;AAqDtB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/dannyarisa/podpenguin/podpenguin/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport sha1 from 'sha1';\nimport PodcastContainer from './components/PodcastContainer';\nimport MeteorShower from './components/MeteorShower';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [podcasts, setPodcasts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchBarPosition, setSearchBarPosition] = useState('center');\n  const searchForPodcasts = () => {\n    const apiKey = 'G7W9KCRKZ83SCS4YGWLE';\n    const apiSecret = 'Ljr7EMHDpq7p37DnpfQCcTNHHNVwWKL7KqYKgL3B';\n    const apiHeaderTime = Date.now() / 1000;\n    const hash = sha1(apiKey + apiSecret + apiHeaderTime);\n    const headers = {\n      'User-Agent': 'SuperPodcastPlayer/1.3',\n      'X-Auth-Key': apiKey,\n      'X-Auth-Date': apiHeaderTime,\n      Authorization: hash\n    };\n    fetch(`https://api.podcastindex.org/api/1.0/search/byterm?q=${searchQuery}&limit=1`, {\n      headers\n    }).then(response => response.json()).then(data => {\n      // Set the podcasts state to the array of feeds from the API response\n      setPodcasts(data.feeds);\n    }).catch(err => console.error(err));\n    setSearchBarPosition('top');\n  };\n  // This function searches for podcasts using the searchQuery value and updates the podcasts state with the search results. You would then use the podcasts state to render a list of podcasts in the app.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      className: \"search-input\",\n      onChange: event => setSearchQuery(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchForPodcasts,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), podcasts ? podcasts.map(podcast => /*#__PURE__*/_jsxDEV(PodcastContainer, {\n      podcast: podcast\n    }, podcast.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading podcasts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pSkfudbJafFV+Jkbt+ZjIqSBLtg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","motion","sha1","PodcastContainer","MeteorShower","App","podcasts","setPodcasts","searchQuery","setSearchQuery","searchBarPosition","setSearchBarPosition","searchForPodcasts","apiKey","apiSecret","apiHeaderTime","Date","now","hash","headers","Authorization","fetch","then","response","json","data","feeds","catch","err","console","error","event","target","value","map","podcast","id"],"sources":["/Users/dannyarisa/podpenguin/podpenguin/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport sha1 from 'sha1';\nimport PodcastContainer from './components/PodcastContainer';\nimport MeteorShower from './components/MeteorShower';\n\n\n\nconst App = () => {\n  const [podcasts, setPodcasts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchBarPosition, setSearchBarPosition] = useState('center'); \n\n\n  const searchForPodcasts = () => {\n    const apiKey = 'G7W9KCRKZ83SCS4YGWLE';\n    const apiSecret = 'Ljr7EMHDpq7p37DnpfQCcTNHHNVwWKL7KqYKgL3B';\n    const apiHeaderTime = Date.now() / 1000;\n    const hash = sha1(apiKey + apiSecret + apiHeaderTime);\n  \n    const headers = {\n      'User-Agent': 'SuperPodcastPlayer/1.3',\n      'X-Auth-Key': apiKey,\n      'X-Auth-Date': apiHeaderTime,\n      Authorization: hash,\n    };\n  \n    fetch(`https://api.podcastindex.org/api/1.0/search/byterm?q=${searchQuery}&limit=1`, { headers })\n      .then(response => response.json())\n      .then(data => {\n        // Set the podcasts state to the array of feeds from the API response\n        setPodcasts(data.feeds);\n      })\n      .catch(err => console.error(err));\n      setSearchBarPosition('top');\n  }\n  // This function searches for podcasts using the searchQuery value and updates the podcasts state with the search results. You would then use the podcasts state to render a list of podcasts in the app.\n  \n\n  return (\n    <div>\n   <input\n  type=\"text\"\n  value={searchQuery}\n  className=\"search-input\"\n  onChange={event => setSearchQuery(event.target.value)}\n/>\n    <button onClick={searchForPodcasts}>Search</button>\n    {podcasts ? (\n      podcasts.map(podcast => (\n        <PodcastContainer key={podcast.id} podcast={podcast} />\n      ))\n    ) : (\n      <p>Loading podcasts...</p>\n    )}\n  </div>\n  \n  );\n};\n\n\nexport default App\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,YAAY,MAAM,2BAA2B;AAAC;AAIrD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,QAAQ,CAAC;EAGpE,MAAMa,iBAAiB,GAAG,MAAM;IAC9B,MAAMC,MAAM,GAAG,sBAAsB;IACrC,MAAMC,SAAS,GAAG,0CAA0C;IAC5D,MAAMC,aAAa,GAAGC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI;IACvC,MAAMC,IAAI,GAAGhB,IAAI,CAACW,MAAM,GAAGC,SAAS,GAAGC,aAAa,CAAC;IAErD,MAAMI,OAAO,GAAG;MACd,YAAY,EAAE,wBAAwB;MACtC,YAAY,EAAEN,MAAM;MACpB,aAAa,EAAEE,aAAa;MAC5BK,aAAa,EAAEF;IACjB,CAAC;IAEDG,KAAK,CAAE,wDAAuDb,WAAY,UAAS,EAAE;MAAEW;IAAQ,CAAC,CAAC,CAC9FG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACAlB,WAAW,CAACkB,IAAI,CAACC,KAAK,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;IACjCjB,oBAAoB,CAAC,KAAK,CAAC;EAC/B,CAAC;EACD;;EAGA,oBACE;IAAA,wBACD;MACD,IAAI,EAAC,MAAM;MACX,KAAK,EAAEH,WAAY;MACnB,SAAS,EAAC,cAAc;MACxB,QAAQ,EAAEuB,KAAK,IAAItB,cAAc,CAACsB,KAAK,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACtD,eACE;MAAQ,OAAO,EAAErB,iBAAkB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,EAClDN,QAAQ,GACPA,QAAQ,CAAC4B,GAAG,CAACC,OAAO,iBAClB,QAAC,gBAAgB;MAAkB,OAAO,EAAEA;IAAQ,GAA7BA,OAAO,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAClC,CAAC,gBAEF;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAGR,CAAC;AAAC,GAlDI/B,GAAG;AAAA,KAAHA,GAAG;AAqDT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
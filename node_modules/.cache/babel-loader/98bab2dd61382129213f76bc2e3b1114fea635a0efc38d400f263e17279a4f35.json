{"ast":null,"code":"var _jsxFileName = \"/Users/dannyarisa/podpenguin/podpenguin/client/src/components/PodcastContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport xml2js from 'xml2js';\nimport AudioPlayer from './AudioPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PodcastContainer = _ref => {\n  _s();\n  let {\n    podcast\n  } = _ref;\n  const {\n    image,\n    title,\n    author,\n    link,\n    audioUrl,\n    description,\n    originalUrl\n  } = podcast;\n  const [episodes, setEpisodes] = useState([]);\n  const [doubleClicked, setDoubleClicked] = useState(false);\n  useEffect(() => {\n    // Make an HTTP GET request to the originalUrl\n    axios.get(originalUrl).then(response => {\n      // Parse the XML data\n      xml2js.parseString(response.data, (err, result) => {\n        if (err) {\n          console.error(err);\n        } else {\n          // Update state with the parsed podcast data\n          setEpisodes(result.rss.channel[0].item);\n        }\n      });\n    });\n  }, [originalUrl]);\n  //  Add an event handler for the onClick event for the container element\n  const handleDoubleClick = () => {\n    setDoubleClicked(true);\n  };\n  // Use the map() method to iterate over the episodes\n  // and display the information for each episode\n\n  const episodeList = episodes.map(episode => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", episode.title[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), episode.description[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: episode.pubDate[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), episode['itunes:image'] && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: episode['itunes:image'][0].href,\n      alt: episode.title[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), episode.link && /*#__PURE__*/_jsxDEV(AudioPlayer, {\n      audioUrl: episode.link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }, this), console.log(episode)]\n  }, episode.guid[0]._, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this));\n  console.log(episodes);\n  console.log(originalUrl);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"podcast-container\",\n    onClick: handleDoubleClick,\n    children: [image ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: title\n      // onRightClick={() => window.open(link, '_blank')}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://www.rbr.com/wp-content/uploads/unnamed-1-45.jpg\",\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), episodes && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: episodeList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n};\n_s(PodcastContainer, \"O2oXv3L1YUbYeI/giP6lqLPMYlg=\");\n_c = PodcastContainer;\nexport default PodcastContainer;\nvar _c;\n$RefreshReg$(_c, \"PodcastContainer\");","map":{"version":3,"names":["React","useState","useEffect","axios","xml2js","AudioPlayer","PodcastContainer","podcast","image","title","author","link","audioUrl","description","originalUrl","episodes","setEpisodes","doubleClicked","setDoubleClicked","get","then","response","parseString","data","err","result","console","error","rss","channel","item","handleDoubleClick","episodeList","map","episode","pubDate","href","log","guid","_"],"sources":["/Users/dannyarisa/podpenguin/podpenguin/client/src/components/PodcastContainer.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport xml2js from 'xml2js';\nimport AudioPlayer from './AudioPlayer';\n\nconst PodcastContainer = ({ podcast }) => {\n  const { image, title, author, link, audioUrl, description, originalUrl  } = podcast;\n  const [episodes, setEpisodes] = useState([]);\n  const [doubleClicked, setDoubleClicked] = useState(false)\n  \n  useEffect(() => {\n    // Make an HTTP GET request to the originalUrl\n    axios.get(originalUrl).then((response) => {\n      // Parse the XML data\n      xml2js.parseString(response.data, (err, result) => {\n        if (err) {\n          console.error(err);\n        } else {\n          // Update state with the parsed podcast data\n          setEpisodes(result.rss.channel[0].item);\n        }\n      });\n    });\n  }, [originalUrl]);\n//  Add an event handler for the onClick event for the container element\n  const handleDoubleClick = () => {\n    setDoubleClicked(true);\n  };\n  // Use the map() method to iterate over the episodes\n  // and display the information for each episode\n\n  const episodeList = episodes.map(episode => (\n    <li key={episode.guid[0]._}>\n      <h2> {episode.title[0]}</h2>\n      <br />\n      {episode.description[0]}\n      <br />\n      <p>{episode.pubDate[0]}</p>\n  \n      {episode['itunes:image'] && (\n        <img src={episode['itunes:image'][0].href} alt={episode.title[0]} />\n      )}\n  \n      {/* Add the AudioPlayer component here */}\n      {episode.link && <AudioPlayer audioUrl={episode.link} />}\n  \n      {console.log(episode)}\n    </li>\n  ));\n  \n     console.log(episodes)\n    \n  \nconsole.log(originalUrl);\n\nreturn (\n      <div className=\"podcast-container\" onClick={handleDoubleClick}>\n        {image ? (\n          <img\n            src={image}\n            alt={title}\n            // onRightClick={() => window.open(link, '_blank')}\n          />\n        ) : (\n          <img src=\"https://www.rbr.com/wp-content/uploads/unnamed-1-45.jpg\" alt={title} />\n        )}\n        <h1>{title}</h1>\n        <h3>{author}</h3>\n        <p>{description}</p>\n\n        {episodes && (\n  <ul>\n    {episodeList}\n  </ul>\n)}\n      </div>\n    );\n  };\n  \n  export default PodcastContainer;\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}